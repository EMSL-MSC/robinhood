# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

EntryProcessor
{
    match_classes = FALSE;
}

General
{
    lock_file = "/var/lock/rbh.lock";
	fs_path = "/tmp/mnt.rbh";
	fs_type = ext3;
}

ChangeLog
{
    # 1 MDT block for each MDT :
    MDT
    {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    force_polling = TRUE;
    polling_interval = 1s;
}

Log
{
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = stdout;

    # File for reporting purge events
    report_file = "/dev/null";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/dev/null";

}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = "robinhood_test";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        innodb = enabled;
	}

	SQLite {
	        db_file = "/tmp/robinhood_sqlite_db" ;
        	retry_delay_microsec = 1000 ;
	}
}

# for tests with backup purpose
Backend
{
	opt_string = "root=/tmp/backend";
}


Filesets
{
    FileClass test_purge
    {
        Definition
        {
            xattr.user.foo == "[1-5]"
        }
    }
}

purge_policies
{
    policy default
    {
        condition { last_mod >= 0sec }
    }
}

purge_trigger
{
    trigger_on         = global_usage;
    high_threshold_pct = 0%;
    low_threshold_pct  = 0%;
    check_interval     = 5min;
}

migration_policies
{
    policy default
    {
        condition
        {
            last_mod >= 0sec
        }
    }
}

