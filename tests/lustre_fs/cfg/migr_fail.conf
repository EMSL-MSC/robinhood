General
{
	fs_path = /mnt/lustre;
	fs_type = lustre;
}

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog
{
    # 1 MDT block for each MDT :
    MDT
    {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    force_polling = TRUE;
    polling_interval = 1s;
}

Log
{
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = stdout;

    # File for reporting purge events
    report_file = "/dev/null";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/tmp/rh_alert.log";

}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = "robinhood_lustre";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        innodb = enabled;
	}

	SQLite {
	        db_file = "/tmp/robinhood_sqlite_db" ;
        	retry_delay_microsec = 1000 ;
	}
}

# for tests with backup purpose
backend
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    action_cmd = "./cfg/migr_failer.sh";
}

FS_Scan
{
    Ignore { path == "/mnt/lustre/.lustre" }
}

Filesets
{
    Fileclass tofail { definition { name == "*.fail" } }
}

migration_policies
{
	policy fail_me {
                     target_fileclass = tofail;
                     migration_hints = "fail";
                     condition { creation > 1s }
                   }
	policy default { condition { creation > 1s } }
}

migration_parameters {
    # suspend migration if error rate > 50% and nb errors > 5
    suspend_error_pct = 50%;
    suspend_error_min = 5;

    max_migration_count = 10;

	lru_sort_attr = creation;
}

