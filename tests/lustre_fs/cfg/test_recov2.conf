# -*- mode: c; c-basic-offset: 4; indent-tabs-mode: nil; -*-
# vim:expandtab:shiftwidth=4:tabstop=4:

General
{
	fs_path = /mnt/lustre;
	fs_type = lustre;
}

# ChangeLog Reader configuration
# Parameters for processing MDT changelogs :
ChangeLog
{
    # 1 MDT block for each MDT :
    MDT
    {
        # name of the first MDT
        mdt_name  = "MDT0000" ;

        # id of the persistent changelog reader
        # as returned by "lctl changelog_register" command
        reader_id = "cl1" ;
    }
    force_polling = TRUE;
    polling_interval = 1s;
}

Log
{
    # Log verbosity level
    # Possible values are: CRIT, MAJOR, EVENT, VERB, DEBUG, FULL
    debug_level = EVENT;

    # Log file
    log_file = stdout;

    # File for reporting purge events
    report_file = "/dev/null";

    # set alert_file, alert_mail or both depending on the alert method you wish
    alert_file = "/tmp/rh_alert.log";

}

ListManager
{
	MySQL
	{
		server = "localhost";
		db = "robinhood_lustre";
        user = "robinhood";
		# password or password_file are mandatory
		password = "robinhood";
        innodb = enabled;
	}

	SQLite {
	        db_file = "/tmp/robinhood_sqlite_db" ;
        	retry_delay_microsec = 1000 ;
	}
}

# for tests with backup purpose
backend
{
    root = "/tmp/backend";
    mnt_type=ext4;
    check_mounted = FALSE;
    archive_symlinks = FALSE;
}

FS_Scan
{
    Ignore { path == "/mnt/lustre/.lustre" }
}

######## Policies for this test ###########

migration_policies
{
    policy default
    {
        # Archive 'dirty' files that have not been modified
        # for more than 6 hours, or backup them daily
        # if they are continuously appended.
        condition
        {
            last_mod > 1sec
        }
    }
}

migration_parameters
{
    backup_new_files = TRUE;
}

######## most basic space release policy ##########

purge_policies
{
    policy default
    {
        # We can release files that have not been accessed
        # for more than a day
        condition
        {
            last_access > 1h
        }
    }
}

####### Purge trigger ########

# trigger purge on OST if its usage exceeds 85%
purge_trigger
{
    trigger_on         = OST_usage ;
    high_threshold_pct = 85% ;
    low_threshold_pct  = 80% ;
    check_interval     = 5min ;
}

##### basic HSM remove policy ######

hsm_remove_policy
{
    #remove files 1 week after they have been removed from Lustre
    deferred_remove_delay = 1w;
}
